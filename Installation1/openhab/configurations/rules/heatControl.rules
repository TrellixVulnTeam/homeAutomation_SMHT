import org.openhab.core.library.types.DecimalType
import org.openhab.core.library.types.*
import org.openhab.core.persistance.*
import org.openhab.model.script.actions.*

//-----------------------------------------------------------------------
// Rule to turn on/off a switch connected to a Heater.
//   ON : inside temperature gets below outside temperature
//   OFF: temperature is above a defined level
//        Inside temperature used : gSovhuset_Temperature
//        Outside temperature used : gTradgarden_Temperature
//
//   1. Fetch value of switch
//   2. if oldstate is ON do some checking
//   3. if oldstate is OFF do some checking
//
//-----------------------------------------------------------------------
rule "Huset temperature adjuster"
when

    Item gLivingroom_Temperature received update
    or Item gOutside_Temperature received update

    var OnOffType existingState = Light_gLivingroom_GlobeLamp.state as OnOffType
    var OnOffType newState = existingState
    var DecimalType onHysteresis = 1
    var DecimalType offHysteresis = 2
    var DecimalType tempIn  = gLivingroom_Temperature.state as DecimalType
    var DecimalType tempOut = gOutside_Temperature.state as DecimalType
    var DecimalType tempDiff = 0

//    logInfo("DEBUG", " in:"+tempIn+" tempUt:"+tempOut+" State:"+existingState)
    
    if (existingState == ON)
    {
        if ((tempIn-tempOut) > offHysteresis)
        {
            logInfo("House temp too high", " temp Inside - temp Outside > hysteresis. Turn OFF heater.")
            newState = OFF
        }
    }
    else 
    {
        if ((tempOut-tempIn) > onHysteresis)
        {
            logInfo("Hose temp too low" , " temp Outside - temp inside > hysteresis. Turn ON heater.")
            newState = ON
        }
    }
    if (newState != existingState)
    {
        logInfo("DEBUG", " Set switch to: "+newState)
        sendCommand(Light_gLivingroom_GlobeLamp, newState)
//      sendMail("bjorn.lonne@gmail.com","Sleephouse Temperature warning", "Temperature inside below outside. Turning ON Heater 1. Temp:"+tempIn)
    }
end


/-----------------------------------------------------------------------
// Rule to turn on/off a switch connected to a Heater.
//   ON : temperature inside gets below temmperature outside
//   OFF: temperature inside gets equal to or above temperature outside
//-----------------------------------------------------------------------
// rule "House temperature trigger"
// when
//    Item gHuset_Temperature changed
//    then
//        if ((gHuset_Temperature.state < 10) && (gHuset_Heater1.state == OFF)) {
//            logInfo("House Temperature changed", "temperature below 10. Turn on heater 1. Temp: "+gHuset_Temperature.state)
//	    sendCommand(gHuset_Heater1, ON)
//            sendMail("bjorn.lonne@gmail.com","House Temperature warning", "Temperature in house below 10 degrees. Turning ON Heater 1. Temp:"+gHuset_Temperature.state)
//        }
//        else {
//            if ((gHuset_Temperature.state > 15) && (gHuset_Heater1.state == ON)) {
//                logInfo("House Temperature changed", "temperature above 15 and gHusetHeater1 is ON. Temperature: "+gHuset_Temperature.state)
//                sendCommand(gHuset_Heater1, OFF)
//                sendMail("bjorn.lonne@gmail.com","House Temperature warning", "Temperature in house above 15 degrees. Turning OFF Heater 1. Temp:"+gHuset_Temperature.state)
//            }
//            else {
//            logInfo("House Temperature changed", "temperature changed but Heater not changed. Temperature: "+gHuset_Temperature.state)
//            }
//       }
//end

