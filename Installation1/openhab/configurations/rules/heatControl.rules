import org.openhab.core.library.types.DecimalType
import org.openhab.core.library.types.*
import org.openhab.core.persistance.*
import org.openhab.model.script.actions.*

//-----------------------------------------------------------------------
// Rule to turn on/off a switch connected to a Heater.
//
//   Inside temperature used  : gLivingroom_Temperature
//   Outside temperature used : gOutside_Temperature
//
//   1. Fetch value of heater switch
//   2. if existingState is ON 
//      Check if tempIn > tempOut and if so, turn OFF heater.
//   3. if existingState is OFF:
//      Check if tempIn is < tempOut and if so, turn ON heater.
//
//-----------------------------------------------------------------------
rule "House temperature adjuster"
when
    Item gLivingroom_Temperature received update
    or Item gOutside_Temperature received update
then
    var OnOffType existingState = OFF
    var OnOffType newState      = OFF
    var DecimalType onHysteresis  = 1
    var DecimalType offHysteresis = 2
    var DecimalType tempIn  = 0
    var DecimalType tempOut = 0

    if (gLivingroom_Temperature.state instanceof DecimalType) {

        if (Light_gLivingroom_GlobeLamp.state instanceof OnOffType) {
            existingState = Light_gLivingroom_GlobeLamp.state as OnOffType
            newState = existingState
        }
        tempIn  = gLivingroom_Temperature.state as DecimalType

        if (gOutside_Temperature.state instanceof DecimalType) {
            tempOut = gOutside_Temperature.state as DecimalType
            // logInfo("DEBUG text", " in:"+tempIn+" tempUt:"+tempOut+" State:"+existingState)

            if (existingState == ON)
            {
                if ((tempIn-tempOut) > offHysteresis)
                {
                    logInfo("House temp too high", " temp Inside - temp Outside > hysteresis. Turn OFF heater.")
                    newState = OFF
                }
            }
            else
            {
                if ((tempOut-tempIn) > onHysteresis)
                {
                    logInfo("House temp too low" , " temp Outside - temp inside > hysteresis. Turn ON heater.")
                    newState = ON
               }
            }
        }
    }

    if (newState != existingState)
    {
        sendCommand(Light_gLivingroom_GlobeLamp, newState)

        if (newState == ON)
        {
            sendMail("bjorn.lonne@gmail.com","Livingroom temperature warning", "Temperature inside too low. Turning ON Heater. in:"+tempIn+" out"+tempOut)
        }
        else
        {
            sendMail("bjorn.lonne@gmail.com","Livingroom temperature warning", "Temperature inside too high. Turning OFF Heater. in:"+tempIn+" out"+tempOut)
        }
    }
end


/-----------------------------------------------------------------------
// Rule to turn on/off a switch connected to a Heater.
//   ON : temperature inside gets below temmperature outside
//   OFF: temperature inside gets equal to or above temperature outside
//-----------------------------------------------------------------------
// rule "House temperature trigger"
// when
//    Item gHuset_Temperature changed
//    then
//        if ((gHuset_Temperature.state < 10) && (gHuset_Heater1.state == OFF)) {
//            logInfo("House Temperature changed", "temperature below 10. Turn on heater 1. Temp: "+gHuset_Temperature.state)
//	    sendCommand(gHuset_Heater1, ON)
//            sendMail("bjorn.lonne@gmail.com","House Temperature warning", "Temperature in house below 10 degrees. Turning ON Heater 1. Temp:"+gHuset_Temperature.state)
//        }
//        else {
//            if ((gHuset_Temperature.state > 15) && (gHuset_Heater1.state == ON)) {
//                logInfo("House Temperature changed", "temperature above 15 and gHusetHeater1 is ON. Temperature: "+gHuset_Temperature.state)
//                sendCommand(gHuset_Heater1, OFF)
//                sendMail("bjorn.lonne@gmail.com","House Temperature warning", "Temperature in house above 15 degrees. Turning OFF Heater 1. Temp:"+gHuset_Temperature.state)
//            }
//            else {
//            logInfo("House Temperature changed", "temperature changed but Heater not changed. Temperature: "+gHuset_Temperature.state)
//            }
//       }
//end
