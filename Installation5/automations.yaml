# Globelamp i library
#     - Follow the sun
#           - Turn on at sunset
#           - Turn off at specific time (23.30)
#           - Turn off at sunrise
#
#
  - alias: Turn on the globelamp when the sun sets
    initial_state: True
    hide_entity: False
    trigger:
      platform: sun
      event: sunset
    action:
      service: switch.turn_on
      entity_id: switch.globelamp
#
  - alias: Turn off the globelamp when late
    initial_state: True
    hide_entity: False
    trigger:
      platform: time
      at: '23:30:00'
    action:
      service: switch.turn_off
      entity_id: switch.globelamp
#
  - alias: Turn off the globelamp when the sun rises
    initial_state: True
    hide_entity: False
    trigger:
      platform: sun
      event: sunrise
    action:
      service: switch.turn_off
      entity_id: switch.globelamp
#
# Windowlamp in kitchen
#     - Follow the sun
#           - Turn on at sunset
#           - Turn off at specific time (22.00)
#           - Turn off at sunrise
#           
  - alias: Turn on the windowlamp when the sun sets
    initial_state: True
    hide_entity: False
    trigger:
      platform: sun
      event: sunset
    action:
      service: switch.turn_on
      entity_id: switch.windowlamp
#
  - alias: Turn off the windowlamp when late
    initial_state: True
    hide_entity: False
    trigger:
      platform: time
      at: '23:00:00'
    action:
      service: switch.turn_off
      entity_id: switch.windowlamp
#
  - alias: Turn off the windowlamp when the sun rises
    initial_state: True
    hide_entity: False
    trigger:
      platform: sun
      event: sunrise
    action:
      service: switch.turn_off
      entity_id: switch.windowlamp
#
# Trigger called when doorMagnet1 is closed (connected)
# OK
#
# Window lamp turned off
# Switch windowlamp off when magnetic1 close (1Off = off) has been triggered
# DoorSwitch1Off turned off
# Window lamp turned off
# Lampgroup3 turned off
# Master bedroom turned off
# Window lamp turned off
# Window lamp turned off
# Switch windowlamp off when magnetic1 close (1Off = off) has been triggered
# DoorSwitch1Off turned off
#
  - alias: Switch windowlamp off when magnetic1 close (1Off = off)
    initial_state: True
    hide_entity: False
    trigger:
      platform: state
      entity_id: switch.doorswitch1off
      to: 'off'
    action:
      service: switch.turn_off
      entity_id: switch.windowlamp
#
# Trigger called when doorMagnet1 is opened (unconnected)
# OK
#
# Window lamp turned on
# Switch windowlamp on when magnetic1 open (1On = on) has been triggered
# DoorSwitch1On turned on
# Window lamp turned on
# Lampgroup3 turned on
# Master bedroom turned on
# Window lamp turned on
# Window lamp turned on
# Switch windowlamp on when magnetic1 open (1On = on) has been triggered
# DoorSwitch1On turned on
#
  - alias: Switch windowlamp on when magnetic1 open (1On = on)
    initial_state: True
    hide_entity: False
    trigger:
      platform: state
      entity_id: switch.doorswitch1on
      to: 'on'
    action:
      service: switch.turn_on
      entity_id: switch.windowlamp
#
# Alarmlamp in master bedroom
#      - Act on door sensor
#           - Turn on when door open
#           - Turn off when door closes
#
# Trigger called when doorMagnet2 is closed (connected)
# OK
  - alias: Switch alarmlamp off when magnetic2 close
    initial_state: True
    hide_entity: False
    trigger:
      platform: state
      entity_id: switch.doorswitch2
      to: 'off'
    action:
      service: switch.turn_off
      entity_id: switch.alarmlamp
#
#
# Trigger called when doorMagnet2 is opened (unconnected)
# OK
  - alias: Switch alarmlamp on when magnetic2 open
    initial_state: True
    hide_entity: False
    trigger:
      platform: state
      entity_id: switch.doorswitch2
      to: 'on'
    action:
      service: switch.turn_on
      entity_id: switch.alarmlamp
#
# Power consumption
#
  - alias: Automation för månadsförbrukning Sparsnäs
    initial_state: True
    hide_entity: False
    trigger:
      platform: time
      at: '00:00:01'
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ now().day() | string == "1" }}'
        - condition: or
          conditions:
            - condition: template
              value_template: '{{ now().month() | string == "1" }}'
            - condition: template
              value_template: '{{ now().month() | string == "2" }}'
            - condition: template
              value_template: '{{ now().month() | string == "3" }}'
            - condition: template
              value_template: '{{ now().month() | string == "4" }}'
            - condition: template
              value_template: '{{ now().month() | string == "5" }}'
            - condition: template
              value_template: '{{ now().month() | string == "6" }}'
            - condition: template
              value_template: '{{ now().month() | string == "7" }}'
            - condition: template
              value_template: '{{ now().month() | string == "8" }}'
            - condition: template
              value_template: '{{ now().month() | string == "9" }}'
            - condition: template
              value_template: '{{ now().month() | string == "10" }}'
            - condition: template
              value_template: '{{ now().month() | string == "11" }}'
            - condition: template
              value_template: '{{ now().month() | string == "12" }}'
    action:
      service: mqtt.publish
      data:
        topic: 'template/kwh'
        payload_template: "{{ states('sensor.energy_totalmonth') }}"
        retain: 'true'
#
# MAGNETIC SENSOR
#
#
# ALT 1.
#
# Trigger called when doorMagnet1 1 is closed (connected)
# OK
#  - alias: Switch lampgrp1 off when magnetic1 close (1Off=off)
#    initial_state: True
#    hide_entity: False
#    trigger:
#      platform: state
#      entity_id: switch.doorswitch1off
#      to: 'off'
#    condition:
#      - condition: state
#        entity_id: sun.sun
#        state: 'below_horizon'
#    action:
#      service: light.turn_off
#      entity_id: group.lampgrp1
#
# Trigger called when doorMagnet1 is opened (unconnected)
# Lampgroup1 is tuned on
# OK
#  - alias: Turn on the lampgrp1 when magnetic1 open (1on = on)
#    initial_state: True
#    hide_entity: False
#    trigger:
#      platform: state
#      entity_id: switch.doorswitch1on
#      to: 'on'
#    condition:
#      - condition: state
#        entity_id: sun.sun
#        state: 'below_horizon'
#    action:
#      service: light.turn_on
#      entity_id: group.lampgrp1

#
# Trigger called when doorMagnet2 is closed (connected)
# OK
#  - alias: Switch lampgrp2 off when magnetic2 close (1Off=off)
#    initial_state: True
#    hide_entity: False
#    trigger:
#      platform: state
#      entity_id: switch.doorswitch2off
#      to: 'off'
#    condition:
#      - condition: state
#        entity_id: sun.sun
#        state: 'below_horizon'
#    action:
#      service: light.turn_off
#      entity_id: group.lampgrp2
#
# Trigger called when doorMagnet2 is opened (unconnected)
# Lampgroup2 is tuned on
# OK
#  - alias: Turn on the lampgrp2 when magnetic2 open (1on = on)
#    initial_state: True
#    hide_entity: False
#    trigger:
#      platform: state
#      entity_id: switch.doorswitch2on
#      to: 'on'
#    condition:
#      - condition: state
#        entity_id: sun.sun
#        state: 'below_horizon'
#    action:
#      service: light.turn_on
#      entity_id: group.lampgrp2
#
# Triggar när magnet öppnar
# Sensor does not change ?
# UNKNOWN
#  - alias: Set door to open when magnetic open (1on = on)
#    initial_state: True
#    hide_entity: False
#    trigger:
#      platform: state
#      entity_id: switch.doorswitch1on
#      to: 'on'
#    condition:
#      - condition: state
#        entity_id: sun.sun
#        state: 'below_horizon'
#    action:
#      service: homeassistant.turn_on
#      entity_id: binary_sensor.door
#
# Triggar när magnet öppnar
# Sensor does not change ?
# UNKNOWN
#  - alias: Set door group to open when magnetic open 2 (1On = on)
#    initial_state: True
#    hide_entity: False
#    trigger:
#      platform: state
#      entity_id: switch.doorswitch1on
#      to: 'on'
#    action:
#      service: light.turn_on
#      entity_id: group.sensorgroup
#      service: automation.turn_off
#      entity_id: binary_sensor.door
#
#
#####################
#
#
#
#
#
#  - alias: Turn on the lights when the sun sets
#    initial_state: True
#    hide_entity: False
#    trigger:
#      platform: sun
#      event: sunset
#    action:
#      service: light.turn_on
#      entity_id: group.lampgrp
#
#  - alias: Turn off the lights when the sun rises
#    initial_state: True
#    hide_entity: False
#    trigger:
#      platform: sun
#      event: sunrise
#    action:
#      service: light.turn_off
#      entity_id: group.lampgrp
#
# MOTION
#  - alias: Turn on the lights when motion detected
#    initial_state: True
#    hide_entity: False
#    trigger:
#      platform: state
#      entity_id: switch.Motion_1
#      to: 'on'
#    condition:
#      - condition: state
#        entity_id: sun.sun
#        state: 'below_horizon'
#    action:
#      service: light.turn_on
#      entity_id: group.lampgrp
#
#  - alias: Turn off the lights when motion stopped
#    initial_state: True
#    hide_entity: False
#    trigger:
#      platform: state
#      entity_id: switch.Motion_1
#      to: 'off'
#    condition:
#      - condition: state
#        entity_id: sun.sun
#        state: 'below_horizon'
#    action:
#      service: light.turn_off
#      entity_id: group.lampgrp
#
# Triggar aldrig
#  - alias: Turn off the lights when magnetic close (1Off=on)
#    initial_state: True
#    hide_entity: False
#    trigger:
#      platform: state
#      entity_id: switch.DoorSwitch1Off
#      to: 'on'
#    condition:
#      - condition: state
#        entity_id: sun.sun
#        state: 'below_horizon'
#    action:
#      service: light.turn_off
#      entity_id: group.lampgrp
# Triggar aldrig
#  - alias: Set door to open when magnetic close (1Off=on)
#    initial_state: True
#    hide_entity: False
#    trigger:
#      platform: state
#      entity_id: switch.DoorSwitch1Off
#      to: 'on'
#    action:
#      service: homeassistant.turn_off
#      entity_id: binary_sensor.door
